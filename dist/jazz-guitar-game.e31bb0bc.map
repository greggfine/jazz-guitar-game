{"version":3,"sources":["index.js"],"names":["score","document","querySelector","lives","startGameBtn","startGameDisplay","questionAndAnswerDisplay","scoreWrapper","livesWrapper","volumeControl","questionCount","whoIsThis","playGame","btnGroup","gameOverDisplay","container","audio","createElement","successSFX","failureSFX","gameOverSFX","img","scoreCount","questionCountCounter","livesCount","currentTrack","src","textContent","addEventListener","muted","iconElement","classList","toggle","guitaristNames","tracks","map","track","name","setupButtons","randomBtnAppend","createCorrectButton","createWrongButton","getRandomTrack","Math","floor","random","length","getRandomName","arr","init","style","display","removeButtons","removeClassNames","setRandomTrack","removeNameText","Array","from","children","forEach","child","tagName","removeChild","disableButtons","fileName","play","loop","displayImage","image","appendChild","displayName","h3","add","className","revealCorrectAnswer","pause","setupNextQuestion","setTimeout","setGameOver","innerHTML","createPlayAgainButton","startGame","button","once","randomName","buttons","shuffledBtns","_","shuffle","btn"],"mappings":"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","file":"jazz-guitar-game.e31bb0bc.map","sourceRoot":"..","sourcesContent":["\"use strict\";\n\n(function() {\n    const score = document.querySelector('.score'),\n          lives = document.querySelector('.lives'),\n          startGameBtn = document.querySelector('.start-game-btn'),\n          startGameDisplay = document.querySelector('.start-game-display'),\n          questionAndAnswerDisplay = document.querySelector('.question-answer-display'),\n          scoreWrapper = document.querySelector('.score-wrapper'),\n          livesWrapper = document.querySelector('.lives-wrapper'),\n          volumeControl = document.querySelector('.volume-control'),\n          questionCount = document.querySelector('.question-count'),\n          whoIsThis = document.querySelector('.who-is-this'),\n          playGame = document.querySelector('.play-game'),\n          btnGroup = playGame.querySelector('.btn-group'),\n          gameOverDisplay = document.querySelector('.game-over'),\n          container = document.querySelector('.container'),\n          audio = document.createElement('audio'),\n          successSFX = document.createElement('audio'),\n          failureSFX = document.createElement('audio'),\n          gameOverSFX = document.createElement('audio'),\n          img = document.createElement('img');\n\n    let scoreCount = 0,\n        questionCountCounter = 1,\n        livesCount = 3,\n        currentTrack;\n\n    successSFX.src = './audio/sfx/success/gregg-omnisphere5.mp3';\n    failureSFX.src = './audio/sfx/failure/2_DANCE_FX_DANCE_1_003.mp3';\n    gameOverSFX.src = './audio/sfx/game_over/Cutting Power.mp3';\n    \n    score.textContent = scoreCount;\n    questionCount.textContent = `${questionCountCounter}/10`;\n    lives.textContent = livesCount;\n\n    \n    volumeControl.addEventListener('click', function () {\n        audio.muted? audio.muted = false : audio.muted = true;\n        successSFX.muted? successSFX.muted = false : successSFX.muted = true;\n        failureSFX.muted? failureSFX.muted = false : failureSFX.muted = true;\n        const iconElement = this.querySelector('i');\n        iconElement.classList.toggle('fa-volume-up');\n        iconElement.classList.toggle('fa-volume-off');\n    })\n\n    const guitaristNames = tracks.map(track => track.name),\n          setupButtons = () => randomBtnAppend(createCorrectButton(currentTrack), createWrongButton()),\n          getRandomTrack = () => tracks[Math.floor(Math.random() * tracks.length)],\n          getRandomName = (arr) => arr[Math.floor(Math.random() * guitaristNames.length)];\n\n    function init() {\n        gameOverSFX.muted = true; \n        startGameDisplay.style.display = 'none';\n        whoIsThis.style.display = playGame.style.display = container.style.display = 'block';\n        gameOverDisplay.textContent = '';\n        scoreCount = 0;\n        livesCount = 3;\n        lives.textContent = livesCount;\n        score.textContent = scoreCount;\n        questionCountCounter = 1;\n        questionCount.textContent = `${questionCountCounter}/10`;\n        removeButtons();\n        removeClassNames();\n        setRandomTrack();\n        setupButtons();\n        removeNameText();\n    }\n\n    function removeButtons(){\n        removeClassNames();\n        Array.from(btnGroup.children).forEach(child => {\n            child.tagName === 'BUTTON' ? btnGroup.removeChild(child) : null            \n        })\n    }\n\n    function disableButtons() {\n        Array.from(btnGroup.children).forEach(child => {\n            child.tagName === 'BUTTON' ? child.style.display = 'none' : null\n        })\n    }\n\n    function setRandomTrack(){\n        currentTrack = getRandomTrack();\n        audio.src = `./audio/cuts/${currentTrack.fileName}`;\n        audio.play();\n        audio.loop = true;\n    }\n\n    function displayImage(){\n        img.style.display = 'block';\n        img.src = `./images/optimized/${currentTrack.image}`;\n        questionAndAnswerDisplay.appendChild(img);\n    }\n\n    function displayName(){\n        const h3 = document.createElement('h3');\n        h3.classList.add('name-display');\n        h3.textContent = currentTrack.name;\n        questionAndAnswerDisplay.appendChild(h3);\n    }\n    \n    function removeClassNames(){\n        scoreWrapper.className = '';\n        livesWrapper.className = '';\n    }\n\n    function revealCorrectAnswer(){\n        audio.pause();\n        displayImage();\n        displayName();\n    }\n    \n    function setupNextQuestion(){\n        revealCorrectAnswer();\n        setTimeout(() => {\n            if(questionCountCounter === 10) {\n                removeNameText();\n                setGameOver();\n            } else{\n                questionCount.textContent = `${questionCountCounter += 1}/10`;\n                whoIsThis.style.display = 'block';\n                img.style.display = 'none';\n                removeNameText();\n                setRandomTrack();\n                removeButtons();\n                setupButtons();\n            }}, 2000)\n    }\n\n    function removeNameText(){\n        Array.from(questionAndAnswerDisplay.children).forEach((child) => {\n            child.tagName === 'H3'? questionAndAnswerDisplay.removeChild(child) : null\n        })\n    }\n\n    function setGameOver(){\n        revealCorrectAnswer();\n        setTimeout(() => {\n            gameOverSFX.muted = false;\n            gameOverSFX.play();\n            img.style.display = playGame.style.display = 'none';\n            gameOverDisplay.innerHTML = `<h1>Game Over<h1>\n                                        <h2>Final Score: ${scoreCount}<h2>`\n                 gameOverDisplay.classList.add('game-over-display')\n            createPlayAgainButton();\n        }, 2000)\n    }\n\n    function startGame(){\n        img.style.display = playGame.style.display  = 'none';\n        startGameBtn.addEventListener('click', () =>  init());\n    }\n\n    function createPlayAgainButton(){\n        const button = document.createElement('button');\n        button.innerHTML = `\n                <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\n                <span>Play Again?</span>`;\n        button.classList.add('play-again-btn');\n        gameOverDisplay.appendChild(button);\n        button.addEventListener('click', () => init());\n    }\n\n    function createCorrectButton(currentTrack){\n        const button =  document.createElement('button');\n        button.textContent = `${currentTrack.name}`;\n        button.addEventListener('click', () => {\n            successSFX.play();\n            disableButtons();\n            img.src = '';\n            whoIsThis.style.display = 'none';\n            scoreWrapper.classList.add('success');\n            score.textContent = scoreCount += 100;;\n            setupNextQuestion();\n        }, { once: true })\n        return button;\n    }\n\n    function createWrongButton() {\n        const button = document.createElement('button');\n        while (!button.textContent) {\n            let randomName = getRandomName(guitaristNames);\n            if (randomName !== currentTrack.name) {\n                button.textContent = randomName;\n            }\n        }\n        button.addEventListener('click', () => {\n            failureSFX.play();\n            disableButtons();\n            img.src = '';\n            whoIsThis.style.display = 'none';\n            livesWrapper.classList.add('failure');\n            livesCount -= 1;\n            if(livesCount === 0){\n                lives.textContent = 0;\n                setGameOver();\n            } else{\n                lives.textContent = livesCount;\n                setupNextQuestion();\n            }\n        }, {once: true})\n        return button;\n    }\n\n    function randomBtnAppend(...buttons) {\n        const shuffledBtns = _.shuffle([...buttons]);\n        shuffledBtns.forEach(btn => btnGroup.appendChild(btn));\n    }\n\n    startGame()\n })();"]}